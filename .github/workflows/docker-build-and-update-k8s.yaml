# https://docs.docker.com/build/ci/github-actions/multi-platform/
name: Build Docker image and update K8s manifest
on:
  push:
    branches:
      - main
    paths:
      - app/**
jobs:
  build_and_update:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Set short SHA as env variable
        run: echo "GIT_HASH=$(git rev-parse --short ${{ github.sha }})" >> $GITHUB_ENV

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ./app
          platforms: linux/amd64,linux/arm64
          file: ./app/Dockerfile
          push: true
          tags: |
            badal773/simpletimeservice:latest
            badal773/simpletimeservice:${{ github.ref_name }}
            badal773/simpletimeservice:${{ env.GIT_HASH }}
            
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: 'badal773/simpletimeservice:${{ env.GIT_HASH }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
            
      - name: Update Kubernetes manifest with new image
        run: |
          sed -i "s/^  tag: .*/  tag: ${GIT_HASH}/" terraform/helm/simpletimeservice/values.yaml

      - name: Commit and push changes to manifest
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add terraform/helm/simpletimeservice/values.yaml
          git commit -m "Update deployment image to tag ${GIT_HASH}" || echo "No changes to commit"
          git push origin main

      - name: Check Terraform Remote State Option
        run: |
          if [ "$TF_STATE_REMOTE" = "true" ]; then
            echo "Remote state enabled. Terraform plan/apply will run."
          else
            echo "Remote state not enabled. Skipping Terraform plan/apply steps."
          fi

      - name: Terraform Init & Plan
        if: env.TF_STATE_REMOTE == 'true' && env.KUBECONFIG != ''
        working-directory: ./terraform
        env:
          TF_VAR_aws_region: ${{ env.TF_VAR_aws_region }}
          TF_VAR_vpc_cidr: ${{ env.TF_VAR_vpc_cidr }}
          TF_VAR_cluster_name: ${{ env.TF_VAR_cluster_name }}
          TF_VAR_cluster_version: ${{ env.TF_VAR_cluster_version }}
        run: |
          terraform init -input=false
          terraform plan -input=false

      - name: Terraform Apply
        if: env.TF_STATE_REMOTE == 'true' && env.KUBECONFIG != ''
        working-directory: ./terraform
        env:
          TF_VAR_aws_region: ${{ env.TF_VAR_aws_region }}
          TF_VAR_vpc_cidr: ${{ env.TF_VAR_vpc_cidr }}
          TF_VAR_cluster_name: ${{ env.TF_VAR_cluster_name }}
          TF_VAR_cluster_version: ${{ env.TF_VAR_cluster_version }}
        run: |
          terraform apply -auto-approve -input=false
